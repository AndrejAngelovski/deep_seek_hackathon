
==== Front
BMC Med Res Methodol
BMC Med Res Methodol
BMC Medical Research Methodology
1471-2288
BioMed Central London

1558
10.1186/s12874-022-01558-0
Software
BivRec: an R package for the nonparametric and semiparametric analysis of bivariate alternating recurrent events
Castro-Pearson Sandra cast0135@umn.edu

1
Sur Aparajita sur00001@umn.edu

1
Lee Chi Hyun chihyunlee@umass.edu

2
Huang Chiung-Yu ChiungYu.Huang@ucsf.edu

3
http://orcid.org/0000-0001-7501-6582
Luo Xianghua luox0054@umn.edu

14
1 grid.17635.36 0000000419368657 Division of Biostatistics, School of Public Health, University of Minnesota, Minneapolis, USA
2 grid.266683.f 0000 0001 2166 5835 Department of Biostatistics and Epidemiology, School of Public Health and Health Science, University of Massachusetts Amherst, Amherst, USA
3 grid.266102.1 0000 0001 2297 6811 Department of Epidemiology and Biostatistics, University of California San Francisco, San Francisco, USA
4 grid.17635.36 0000000419368657 Biostatistics Core, Masonic Cancer Center, University of Minnesota, Minneapolis, USA
3 4 2022
3 4 2022
2022
22 9230 9 2021
28 2 2022
© The Author(s) 2022
https://creativecommons.org/licenses/by/4.0/ Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/. The Creative Commons Public Domain Dedication waiver (http://creativecommons.org/publicdomain/zero/1.0/) applies to the data made available in this article, unless otherwise stated in a credit line to the data.
Background

Bivariate alternating recurrent event data can arise in longitudinal studies where patients with chronic diseases go through two states that occur repeatedly, e.g., care periods and break periods. However, there was no statistical software that provided tools for the analysis of such data. To meet this software need, we developed BivRec, a package for R that contains a set of tools for exploratory, nonparametric and semiparametric regression analysis of bivariate alternating recurrent events.

Results

The BivRec package provides functions for nonparametric estimations for the joint distribution of bivariate gap times (bivrecNP) and semiparametric regression methods for evaluating covariate effects on the two types of gap times under the accelerated failure time model framework (bivrecReg). The package also provides exploratory data analysis tools such as a visualization of the gap times by groups. We utilize a subset of the South Verona Psychiatric Case Register (PCR) data to illustrate the use of the BivRec package for the reviewed methods.

Conclusions

We demonstrate BivRec’s capability for data visualization, nonparametric and regression based analysis, as well as data simulation. The package has default methods with satisfactory performance despite the complexity of calculations and fills a gap in software for statistical analysis of bivariate alternating recurrent events. BivRec is accessible under the GPL-3 General Public License through CRAN, facilitating its installation.

Keywords

BivRec
Bivariate gap times
Recurrent events
http://dx.doi.org/10.13039/100000025 National Institute of Mental Health R03MH112895 http://dx.doi.org/10.13039/100011541 Division of Cancer Epidemiology and Genetics, National Cancer Institute R01CA193888 http://dx.doi.org/10.13039/100000050 National Heart, Lung, and Blood Institute T32HL129956 issue-copyright-statement© The Author(s) 2022
==== Body
pmcBackground

Bivariate alternating recurrent event data can arise in longitudinal studies where individuals go through two interchanging states that reoccur over time. For instance, patients with chronic conditions, such as addiction or mental illnesses, experience care periods and break periods repeatedly. The on and off periods of care or disease form a sequence of recurrent gap times. Consider a group of patients who enter a study at the time of a hospitalization due to a particular disease and during the study experience a series of recurrent hospitalizations caused by the same disease. In this case, patients experience alternating periods of care and breaks from care (referred to as Type I and Type II gap times, respectively, hereinafter) until a censoring event such as the end of study occurs.

First, we introduce some notation. Let Xij0 and Yij0 be random variables representing the length of Type I and Type II gap times of episode j experienced by subject i, respectively. Denote the collection of all episodes of subject i by Ni=Xi10,Yi10,Xi20,Yi20,…,i=1,2,…,n. In addition, we assume that the bivariate recurrent event process of subject i is subject to right censoring Ci, which has survival function G(·) with maximum support τc= sup{t:G(t)>0}. Let mi denote the number of episodes of bivariate alternating recurrence times for subject i, which satisfies the conditions: ∑j=1mi−1(Xij0+Yij0)≤Ciand∑j=1mi(Xij0+Yij0)>Ci.

Note that, in the last bivariate pair Ximi0,Yimi0, Ximi0 may or may not be censored, but Yimi0 is always censored, for which we use the hospitalization example to illustrate. When the censoring occurs during the last care period, Ximi0, the break period afterwards, Yimi0 cannot be observed, and when the censoring occurs during the last break period, Yimi0 is only partially observed.

The observation of the gap times Xij0 and Yij0 is subject to the censoring time Cij∗=Ci−∑l=1j−1Xil0+Yil0 and maxCij∗−Xij0,0, respectively, where ∑10=0. Due to the censoring, the observed data for subject i are Xij,Yij,ΔijX,ΔijY,j=1,…,mi, where Xij=Xij0,Yij=Yij0 and ΔijX=ΔijY=1 for j=1,…,mi−1, while Ximi=minXimi0,Cimi∗,Yimi=minYimi0,maxCimi∗−Ximi,0,ΔimiX=IXimi0<Cimi∗ and ΔimiY=0. Figure 1 shows an illustration of this process where the Type I gap of the last episode is observed but the Type II gap following it is censored (i.e., 0<Cimi∗−Ximi<Yimi0). Fig. 1 Illustration of a bivariate alternating recurrent event process

The BivRec package was designed to analyze bivariate alternating recurrent data with the form as depicted in Fig. 1. It provides a consistent and user-friendly set of functions to: explore and visualize the data, estimate and plot the joint cumulative distribution function (cdf), the marginal survival and the conditional cdf using nonparametric methods [1] and fit semiparametric accelerated failure time models [2, 3] to estimate the effect of covariates on the two alternating gap times.

BivRec version 1.2.1 is available through CRAN at https://cran.r-project.org/package=BivRec. The reference manual can be found in both CRAN and Additional file 1 of this paper. The implementation in R was designed for users with some experience analyzing survival data and follows conventions used in similar R packages. Most functions in BivRec are S4 methods that produce S4 class objects. Where possible functions have been optimized using Fortran 90 to reduce running time.

Implementation

Nonparametric analysis

In 2005, Huang and Wang [1] developed a nonparametric method for estimating the joint distribution of the two types of alternating gap times, which is a useful data summary tool for bivariate alternating recurrent event data. In the BivRec package, we implemented Huang and Wang’s (2005) [1] nonparametric methods in the function bivrecNP() to estimate: the joint cumulative distribution function (cdf) for the two types of gap times, PrXij0≤x,Yij0≤y, and its associated standard error (in an output data frame and a contour plot),

the marginal survival function for the Type I gap times, PrXij0>x, and its associated standard error (in an output data frame and a survival plot), and

the conditional cdf for the Type II gap times given the Type I gap times, PrYij0≤y|Xij0≤x, and its associated standard error (in an output data frame and a conditional cdf plot).

For estimation for the cdf, assume that there exists a subject-level latent variable Ψi with an unspecified cdf, PΨ(·) such that the bivariate gap times Xij0,Yij0,j=1,2,… are identically and independently distributed (i.i.d.) given Ψi and that the censoring time Ci is independent of (Ni,Ψi). Define variables Zij0=Xij0+Yij0 and Wij0=Xij0,Yij0, then their joint cdf is FZ0,W0(z,u)=PrXi10+Yi10≤z,Xi10≤x,Yi10≤y for z=x+y and u=(x,y). The marginal survival function of Zij0 is hence SZ0(z)=1−FZ0,W0(z,(∞,∞)). Our interest lies in the estimation of the joint distribution FX0,Y0(x,y)=Pr(Xij0≤x,Yij0≤y), which is determined by FZ0,W0(z,u) through the identity FX0,Y0(x,y)=FZ0,W0(x+y,(x,y)). Let Fa(z,u)=E[aiI(Zi1≤z,Wi1≤u,Δi1=1)] and Ra(z)=E[aiI(Zi1≥z)], where the weight ai=a(Ci) is a non-negative function of Ci and satisfies E[ai2]<∞, with a special case of ai=1, i.e., no weights. Then, following Huang and Louis (1998) [4], it is shown that FZ0,W0(z,u)=∫0zSZ0(s−)Fa(ds,u)Ra(s), where SZ0(·) is the marginal survival function of Zij0 [1]. Noticing that Fa(ds,u) and Ra(s) can be replaced with their respective empirical estimators and that the survival function SZ0(·) can be estimated by the estimator of [5] for univariate (i.e., single-type) recurrent gap times Zij0, one can estimate the joint distribution of interest for any (x,y) satisfying x+y≤τc as follows: 1 F^X0,Y0(x,y)=∑tk∗≤x+y∏l<k1−Ĥa(tl∗,∞)R^a(tl∗)Ĥa(tk∗,(x,y))R^a(tk∗),

where t1∗,t2∗,…tK∗ are the distinct and uncensored recurrence times from {Zij,j=1,…mi∗,i=1,…,n} with mi∗=mi−1 for mi≥2 and mi∗=1 for mi=1, Ĥa(z,u)=n−1∑i=1naiI(mi≥2)mi∗∑j=1mi∗I(Zij=z,Wij≤u) and R^a(z)=n−1∑i=1naimi∗∑j=1mi∗I(Zij≥z).

Next, we focus on the estimation of the marginal survival function for Type I gap times, SX0(x)=Pr(Xi10≥x). Let x1∗,x2∗,…xM∗ denote the distinct and uncensored Type I gap times from {Xij,j=1,…mi∗,i=1,…,n}. Following Wang and Chang (1999) [5], Huang and Wang in 2005 [1] proposed to estimate SX0(x) for x≤τc with: ŜX0(x)=∏xk∗≤x1−ĤX(xk∗)R^X(xk∗),

where ĤX(t)=1n∑i=1naiI(mi≥2)mi∗∑j=1mi∗I(Xij=t) and R^X(t)=1n∑i=1naimi∗∑j=1mi∗I(Xij≥t). Finally, they argued that the marginal distribution of Type II gap times Yij0 is not estimable due to induced dependent censoring, and hence proposed to estimate the conditional distribution of Type II gap times given Type I gap times, FY0|X0(y|x)=Pr(Yi10≤y|Xi10≤x) using the estimator F^Y0|X0(x,y)=F^X0,Y0(x,y)1−ŜX0(x),forx+y≤τc.

Similarly, one can estimate Pr(Yi10≤y|x2≤Xi10≤x1) by F^X0,Y0(x,y)ŜX0(x1)−ŜX0(x2) for x1+y≤τc.

The standard errors of the estimators for the joint distribution and the marginal survival function of Type I gap times are estimated based on the large sample properties of these estimators proved in [1]. Briefly, for 0≤x+y≤L,L<τ<τc with τ being the maximal support of Ra(z), n{F^X0Y0(x,y)−FX0Y0(x,y)} weakly converges to a Gaussian process with mean zero and variance-covariance function Σ=E[ϕ1(z1,u1)ϕ1(z2,u2)]. Similarly, n{Ŝx0(x)−Sx0(x)} converges weakly to a Gaussian process with mean zero and with variance-covariance function Σs=Sx0(x1)Sx0(x2)E[ξ1(x1)ξ1(x2)] where x1,x2∈[0,L]. The definitions of ϕ1(z,u) and ξ1(x) can be found in [1]. For the conditional distribution estimator, F^Y0|X0(y|x), the package provides the bootstrap standard error and confidence intervals.

Semiparametric regression

Researchers, especially in clinical settings, are often more interested in regression methods that allow them to understand the relationship between covariates and the recurrent event process. In this regard, Chang in 2004 [2] proposed a semiparametric accelerated failure time (AFT) model which allows the estimation of the covariate effects on the two types of alternating gap times to be done simultaneously (referred to as Chang’s method hereinafter). Recognizing that the estimation of the AFT model coefficients by Chang is based on a nonsmooth, rank-based estimating function, Lee et al. in 2018 [3] proposed a smooth, U-statistic-based estimating function whose solution is found to be more computationally tractable (referred to as Lee et al.’s method hereinafter). We now briefly review the AFT model for bivariate recurrent gap times and the estimation methods developed by [2] and [3] and implemented in the function bivrecReg().

Let Ai denote a p×1 vector of baseline covariates of subject i and γi=(γi1,γi2)′, a subject-specific latent vector that carries information for within subject correlations among the recurrent gap times. The censoring time Ci is assumed to be independent of (Ni,Ai,γi). The AFT model assumes that conditioning on Ai and γi, the bivariate gap time pairs (Xij0,Yij0),j=1,2,… are i.i.d. within subject i. Furthermore, each (log) gap time is linearly related to the covariates as follows: 2 logXij0=γi1+Ai′β1+εij1,logYij0=γi2+Ai′β2+εij2,

where β1,β2 denote the regression coefficients for Type I and Type II gap times, respectively, and εijk,k=1,2, are mutually independent random errors with mean zero. Both the errors and the latent vectors γi come from unspecified distributions.

In 2004, Chang [2] considered the transformed, complete gap times given by Xij0~(b)=Xij0exp(−Ai′b1) and Zij0~(b)=Xij0exp(−Ai′b1)+Yij0exp(−Ai′b2), where b=(b1′,b2′)′. Their observed counterparts are: X~ij(b)=minX~ij0(b),Ciexp(−A′b1)−∑l=1j−1Z~il(b),and

Z~ij(b)=minZ~ij0(b),Ciexp(−A′b1)−∑l=1j−1Z~il(b).

The rank-based estimating functions [2] are: U1(b)=n−1/2∑i=1n1mi∗∑j=1mi∗Ai−S1X{b,X~ij(b)}S0X{b,X~ij(b)},U2(b)=n−1/2∑i=1n1mi∗∑j=1mi∗Ai−S1Z{b,Z~ij(b)}S0Z{b,Z~ij(b)},

where SkX(b,t)=n−1∑i=1n1mi∗∑j=1mi∗Ai⊗kI(X~ij(b)≥t) and SkZ(b,t)=n−1∑i=1n1mi∗∑j=1mi∗Ai⊗k·I(Z~ij(b)≥t) for k=0,1 and Ai⊗k=1 for k=0; Ai⊗k=Ai for k=1. Denote the solution to U1(b)=0 and U2(b)=0 by β^Chang. Chang (2004) proposed to use the resampling method in [6] to estimate the covariance matrix for β^Chang. Since both the point estimate and the resampling-based interval estimate rely on solving nonsmooth estimating functions, fitting the AFT model with Chang’s method can be computationally inefficient and even encounter a nonconvergence problem, in which case the R function will give the user an error message.

Motivated by a multi-state model [7], Lee et al. [3] defined the transformed gap times Xii′j0(b1)=expAii′′b1Xij0 and Zii′j0(b)=expAii′′b1Xij0+expAii′′b2Yij0 with Aii′=Ai′−Ai. Their observed counterparts are: Xii′j(b1)=exp(Aii′′b1)Xij,and

Zii′j(b)=exp(Aii′′b1)Xij+exp(Aii′′b2)Yijforj=1,…,mi∗.

The authors use OL(·,·), a symmetric, continuous function on {(t,s):0≤t≤L,0≤s≤L} such that OL(s,t) is monotonic in t if s is given and vice versa to derive the following U-statistic-based estimating equations: D1∗(b1)=n−2∑i=1n∑i′=1nAii′1mi∗∑j=1mi∗ΔijXOL1{Xij,Xii′j(b1)}Ĝ1{Xij∧L1},

D2∗(b)=n−2∑i=1n∑i′=1nAii′1mi∗∑j=1mi∗ΔijYOL2{Zij,Zii′j(b)}Ĝ2{Zij∧L2},

where Ĝ1 and Ĝ2 are Kaplan-Meier estimators of the survival function of the censoring time G(·) based on the data {(Xi1,1−Δi1X),i=1,…,n} and {(Zi1,1−Δi1Y),i=1,…,n}, respectively, and L1<τc and L2<τc are limits that ensure respect for the support of G(·). The bivariate functions in the estimating functions, OL1 and OL2 are not necessarily the same. Current implementations used L1=L2=L and OL(s,t)= log[ min{max(t,s),L}]− log(L). The regression coefficient estimators, β^1 and β^2 can be obtained by inductively solving D1∗(b1)=0 and D2∗((β^1′,b2′)′)=0. Note that the smooth and monotonic nature of the estimating equations guarantees a unique solution, a property not possessed by Chang’s method. Moreover, Lee et al. proved the weak convergence of n1/2(β^−β) to a mean zero normal distribution with variance that can be consistently estimated by Σ^β^−1Ω^∗(Σ^β^−1)′ where the definitions of Σ^β^ and Ω^∗ can be found in [3].

Results

We use a subset from the South Verona Psychiatric Case Register (PCR) [8] to illustrate functions in BivRec for data exploration, visualization and analysis in R. Our PCR sample contains data on patients’ care and break periods and disease-related and socioeconomic factors such as age at disease onset, education level, and sex from 336 patients with schizophrenia or related disorders with their conditions first recorded between 1981 and 1995 in South Verona, Italy. We focus on two covariates, one categorical, EDU, and one continuous, Age10, that were previously studied in [3]. These correspond to the education level and age at onset (in 10 years), respectively. We also show a simulated data set and how to simulate data with a function in BivRec in a later section.

Data preparation

Even though bivariate alternating recurrent data may be displayed in a wide or long format, in line with various longitudinal methods, the BivRec package requires that the data is in a long format, with possibly multiple rows for each participant, reflecting the number of episodes that the participant experienced. In addition to a set of baseline covariates (which repeats for each row if a participant has more than one row in the data), the long format data should have six columns corresponding to i,j,Xij,Yij,ΔijX, and ΔijY which are defined in the previous section and can be specified in the statements of a data object function bivrecSurv() by “id=”, “episode=”, “xij=”, “yij=”, “d1=”, and “d2=”, respectively. See Table 1 for the detailed definitions of these arguments. All the functions for data exploration and analysis in BivRec use the data object created with this function. We used the PCR data to create a bivrecSurv() object as follows (see the package manual [9] for further details): Table 1 Arguments and compatible standard functions for function bivrecSurv()

Argument	Description	
id	Vector of subject’s unique identifier.	
episode	Vector indicating the pair or episode number (j) for a subject (i); this will determine order of events for each subject.	
xij	Vector with the lengths of time spent in event of Type I for individual i in episode j.	
yij	Vector with the lengths of time spent in event of Type II for individual i in episode j.	
d1	Vector of censoring indicator corresponding to Type I gap times (xij); d1 = 1 for uncensored, and = 0 for censored gap times.	
d2	Vector of censoring indicator corresponding to Type II gap times (yij); d2 = 1 for uncensored, and = 0 for censored gap times. Note that in the last episode, yij is always censored (i.e., d2 = 0).	
Compatible functions:	plot()	

Note that in practice, the input data may have quality issues such as unequal length of variables, negative values for the gap time variables (xij and yij), gaps or non-integers in the episode variable within a subject (e.g., j=1,3,4 or j= a, b, c), unreasonable values in the censoring indicators (e.g., (d1, d2) = (0, 1) for any episode or (d1, d2) = (1, 1) for the last episode), or no subjects having any uncensored episodes observed (i.e., all d2 = 0). In these cases, the user will get an error message such as “Error: Data not cleaned” with possibly more details to help pinpoint the problem. However, missing values are allowed in the input data even though only subjects with complete data will be used in any subsequent analysis. It is worthwhile to mention that in applications, the time variables may not be observed continuously (e.g., in days); for example, a subject’s censoring event could occur on the same day as the last observed event, causing the situation of (d1, d2) = (1, 1) for the last episode of events (j=mi). For these subjects, we suggest users to add a small quantity to the censoring time during the data cleaning process.

Data exploration

We begin the exploration of this data set by obtaining a visualization of the care and break periods (Fig. 2) using the plot() function on a bivrecSurv object in the following way: Fig. 2 Care and break periods in the South-Verona Psychiatric Case Register (PCR) data sorted by the overall follow-up time of each individual

The resulting plot shows that during the study, the majority of the observation time was spent out of the hospital or care facility, as accentuated by the larger portions of blue in the graph.

The data can also be viewed in subgroups defined by a categorical covariate of six or less levels if a user specifies such a covariate using the by argument of plot(). An example of this feature is shown by looking at times in and out of care based on education levels in the PCR data set. Figure 3 shows the resulting subgroup plots for the levels of the variable EDU, an indicator with values of one for participants with secondary or higher education levels and zero otherwise. Note that in this example, the covariate Age10 is automatically dropped from the by statement, since the function detects that Age10 is possibly a continuous variable. In addition, 10 subjects had missing values for the EDU variable, which is reflected in a message letting the user know only 326 of the subjects were used instead of the full 336 sample. Fig. 3 Care and break periods in the PCR data stratified by education (1 = secondary education or higher; 0 = less than secondary education)

The “bluer” shade of the left panel compared to the one on the right in Fig. 3 indicates that patients with higher education level might have longer break periods than those with less education. Thus, considering education as a factor that affects the re-hospitalization process is reasonable. Note that more than one categorical covariate can be specified in the by argument, but subgroup plots are created for each covariate separately. If subgroups defined by the combinations of multiple categorical variables (e.g., sex and race) are desired, users can define a new categorical variable (with ≤6 levels) before applying the plot() function.

Nonparametric analysis

We use the function bivrecNP() to estimate the joint distribution FX0,Y0(x,y) for all combinations of values given by the options u1 and u2. The non-negative weight in the nonparametric estimator in Equation (1), ai=a(Ci), is specified by the option ai. For the data example, we use a simple unit weight a(Ci)=1 by setting ai=1 (the default). If one sets ai=2, the weight will be the censoring time of each subject, a(Ci)=Ci. The function will automatically estimate the marginal survival probability for Type I gap times SX0 for all distinct and uncensored recurrence times. We set conditional=TRUE to request the conditional distribution estimate for Type II gap times given that Type I gap times fall into a certain interval specified by the given.interval argument. In the following example, we set given.interval=c(100, 500) to estimate FY0|X0(y|100≤X0≤500), and the confidence level of the point-wise confidence intervals is set by level=0.99 as an illustration that the confidence level can be changed to values different than 0.95. Table 2 and the package manual [9] provide further details of the function bivrecNP(). Table 2 Arguments and compatible standard functions for function bivrecNP()

Argument	Description	
response	A response object of the bivrecSurv class.	
level	The confidence level for the point-wise confidence interval; must be between 0.50 and 0.99; the default value is 0.95.	
ai	Value 1 or 2 to indicate which weight function to use in the nonparametric estimator; 1 indicates that the weights are 1 for all subjects, a(Ci)=1 (default); 2 indicates that the weight is the subject’s censoring time, a(Ci)=Ci.	
u1	A vector (or single number) of time values to be used for the estimation of the joint cdf, Pr(X0≤u1,Y0≤u2).	
u2	A vector (or single number) of time values to be used for the estimation of the joint cdf, Pr(X0≤u1,Y0≤u2).	
conditional	A logical value. If TRUE, this function will calculate the conditional cdf for the Type II gap time given an interval of the Type I gap time and the bootstrap standard error and confidence interval at the specified confidence level; the default is FALSE.	
given.interval	A vector c(v1, v2) that must be specified if conditional=TRUE. The vector indicates an interval for the Type I gap time to be used for the estimation of the cdf of the Type II gap time given this interval.	
	If given.interval=c(v1, v2), the function calculates Pr(Y0≤y|v1≤X0≤v2). The given values v1 and v2 must be in the range of gap times in the estimated marginal survival.	
Compatible functions:	plot(), head(), print()	

Using the function head() we show a snapshot of all the output elements. To see the entire data frame for all the output elements, use the R function print(). The individual output elements (joint_cdf, marginal_survival, and conditional_cdf) can also be retrieved using the $ operator following the output object.

We use the plot() function on the resulting object to simultaneously generate plots for all the estimated distributions. To individually plot the joint cdf, the marginal survival probability and the conditional cdf, one can use the plotJoint, plotMarg and plotCond functions, respectively.

Figure 4 is the contour plot of the joint cdf in the half-plane where estimations meet the condition x+y≤τc, for τc=5697. The joint cdf shows that, for instance, the probability that participants were in care for 2000 days or less and out of care for 3000 days or less is over 0.70. Note that the choices of u1 and u2 in the code will determine if the plot of the joint distribution is drawn on a half plane or not. For instance, if we had coded u1=seq(100, 2000, 50) and u2=seq(100, 3000, 50), then all the (x,y) pairs defined by u1 and u2 would be estimable because max(u1)+ max(u2)≤τc. In addition, the resulting object (npresult in this example) will show values of NA for the joint probability for any combination of u1 and u2 that does not meet the x+y≤τc condition. Fig. 4 Contour plot of the joint cdf of the care and break periods for combinations that meet the condition x+y≤τc, where τc=5697

The line plots of the estimated marginal survival probability and conditional cdf (with corresponding 99% confidence intervals in this example) are shown in Fig. 5. The left panel shows that care times shorter than a year and a half are the most likely as the survival probability drops sharply before 500 days. With this in mind, we look at the conditional cdf plot for patients who received between 100 and 500 days of care and conclude that the probability that those patients spent 3000 or fewer days out of care was close to 80%. The bivrecNP() function with conditional=TRUE specification for the PCR data produced results in 248.39 seconds (4.14 minutes, using an AMD Ryzen 5 3500U with Radeon Vega Mobile Gfx 2.10 GHz processor with 16 GB RAM for this and other analyses in this paper). Note that the computing time would be shorter if a less fine grid was specified for u1 and u2. The visualizations for the results, shown in Figs. 4 and 5 ran in less than 2 seconds each. Fig. 5 Plots of the marginal survival probability of the care period and the conditional cdf of the break period given the care period

Semiparametric regression

The function bivrecReg() provides point estimates, standard error estimates, an estimated variance-covariance matrix and confidence intervals at a specified confidence level for the effects of covariate(s) on the two types of gap times, based on the Chang’s method and Lee et al.’s method. Using the PCR data, we show how to estimate the effects of the education and age of disease onset on the two types of gap times Xij0 (care time) and Yij0 (break time) by fitting the AFT model using the function bivrecReg(). We again need to specify a bivrecSurv object as the response, but now we add the covariates to the right hand side of the formula (for further details on the syntax of this function see Table 3 and the reference manual of this package [9]). Note that only baseline (i.e., time-invariant) covariates can be fit in the AFT model in Eq. (2), otherwise, user will get the message, ~Error: Time-varying covariates not allowed.~ We use the function’s default estimation method, Lee et al.’s method, to obtain estimates and Wald confidence intervals based on the asymptotic standard error estimate. This method can also be explicitly specified by the option method=~Lee.et.al~. The messages shown while the function is running and the model fitting output from summary() are as follows. Table 3 Arguments and compatible standard functions for function bivrecReg()

Argument	Description	
formula	A formula with a bivrecSurv object on the left of a ’ ∼’ operator as response, and the covariate(s) on the right.	
data	A data frame that includes all the variables listed in the formula.	
method	A string indicating which method (“Lee.et.al” or “Chang”) to estimate the effects of covariates; the default is “Lee.et.al”.	
Compatible functions:	summary(), vcov(), coef(), confint(), print()	

We show the confidence interval for education and the full variance-covariance matrix using the functions confint() and vcov(), respectively. Similar to the standard R function confint(), one can specify the confidence level and an individual parameter of interest. If needed, one could also see coefficient results using the function coef().

Based on the above results, we conclude that patients in the secondary education or higher (EDU=1) group tended to have 1.76 (=e0.56, p-value =0.007) times longer care periods and 1.21 (=e0.19, p-value >0.05) times longer break periods than patients with less education (EDU=0) after adjusting for covariate Age10. In addition, a ten year delay in age of disease onset was associated with a 1.27-fold (=e0.24, p-value =0.001) increase in the length of break period and a minimal change in the care period of less than 1% (=e0.007, p-value >0.05), holding EDU constant.

We also fit the AFT model using Chang’s method for point estimation along with Parzen’s resampling algorithm to obtain standard error estimates and construct Wald confidence intervals. The results are as follows.

It is important to point out that due to the resampling algorithm needed to obtain variances, applying Chang’s method to the PCR data (n=326 after omitting missing values for EDU) led to substantially longer computing times than applying Lee et al.’s method (56 minutes vs. 67 seconds). Similarly, applying these methods to a simulated data set with a smaller sample size, n=150, led to a much shorter computing time (602 and 16 seconds for the two methods, respectively). In addition, as discussed earlier, the convergence of Chang’s method is not guaranteed for any dataset, and when the convergence is not achieved, users get the following error message, ~Error: Max Iterations reached. Did not converge.~ For these reasons, we recommend to use the default ~Lee.et.al~ method for fitting the AFT model. For a comparison of the estimation bias, standard error, and coverage probability between these two methods with more extensive simulation studies, see [3]. Nonetheless, we show how to use function simBivRec() provided in the BivRec package to simulate a bivariate alternating recurrent event data. This provides a way for users to perform their own simulation studies.

Following [3], in the example below, we show how to simulate a dataset with a categorical covariate a1 from a binomial distribution with success probability 0.5 and a continuous covariate a2 from a uniform (0,1) distribution using the function simBivRec(). This function has options to simulate data based on the various scenarios outlined in [3]. As an example, we set the parameters in the same way as for the scenario presented in the top panel of Table 3 in [3]: the sample size is n=150 (nsize=150); the regression coefficients for the effect of covariate a1 on the Type I and Type II gap times are set as beta1=c(0.5, 0.5); those for covariate a2 are set as beta2=c(0, -0.5); and the support of the uniform distribution (0,τc) for the censoring time is set with tau_c=63, which yields censoring rate of 15% for the first bivariate gap time pairs, on average. Additional parameters for the within-subject correlation structure of the gap times are set through the option, set=1.1, meaning the first parameter setting of simulation scenario 1 in [3].

The first few lines of the simulated data are shown as follows, where id is the subject ID (which can take both numerical and string values in the package), epi is the episode number of a gap time pair, xij and yij are the jth episode of the observed Type I and Type II gap times of subject i, respectively, ci is the overall censoring time of subject i, d1 and d2 are their corresponding censoring indicators, and a1 and a2 are two baseline covariates.

Conclusions

Despite the growing need and interest in the study of recurrent event data along with the development of R packages for its analysis such as survrec [10], reda [11] and reReg [12], software for analyzing bivariate alternating recurrent events has been lacking. In this paper, we reviewed nonparametric and semiparametric regression methods for gap times between alternating recurrent events and demonstrated how to use the BivRec package that we developed in R to perform these analyses. We also demonstrated BivRec’s capabilities for data visualization and simulation.

There is still a need for further package development such as additions of univariate recurrent gap times (i.e., gap times of recurrent events of the same type) methods as the degenerated case of the bivariate alternating gap times data such as the seminal nonparametric work by Wang and Chang (1999) [5] and the subsequent semiparametric regression methods by various authors [2, 13–16]. Finally, some competing, intensity-based models for bivariate alternating recurrent event data, which are not included in our package, can be found in [17] and [18].

Availability and requirements

Project name: Bivariate Alternating Recurrent Event Data Analysis

Project home page: https://cran.r-project.org/web/packages/BivRec/index.html

Operating system(s): Platform independent

Programming language: R

Other requirements: R 3.5.0 or higher

License: GPL-3

Any restrictions to use by non-academics: None

Abbreviations

PCR Psychiatric Case Register

AFT Accelerated Failure Time

Acknowledgements

The authors would like to thank Dr. Sy Han Chiou who has provided valuable suggestions during the development of the package.

Authors’ contributions

SCP wrote the BivRec package and drafted the manuscript. AS assisted in the development of the BivRec package and the manuscript draft. CHL and CYH revised the manuscript. XL initiated the research idea, helped in the design and development of the BivRec package and significantly revised the manuscript. All authors read and approved the final manuscript.

Funding

National Institute of Mental Health R03MH112895 to XL, National Cancer Institute R01CA193888 to CYH, and the National Heart, Lung, and Blood Institute (NHLBI) T32HL129956 to SCP. The funders of the study had no role in study design, data collection, data analysis, data interpretation, or writing of the manuscript.

Availability of data and materials

Requests for the South Verona PCR data can be made by contacting the principal investigator of the WHO Collaborating Centre for Research and Training in Mental Health and Service Evaluation at https://www.dnbm.univr.it/?ent=bibliocr&id=254&tipobc=6&lang=en. R source code is available at https://github.com/SandraCastroPearson/BivRec.

Declarations

Ethics approval and consent to participate

Not applicable. No data were collected in this study.

Consent for publication

Not applicable.

Competing interests

XL is a member of the editorial board for the BMC Medical Research Methodology journal.

Publisher’s Note

Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.
==== Refs
References

1 Huang C-Y Wang M-C Nonparametric estimation of the bivariate recurrence time distribution Biometrics 2005 61 392 402 10.1111/j.1541-0420.2005.00328.x 16011685
2 Chang S-H Estimating marginal effects in accelerated failure time models for serial sojourn times among repeated events Lifetime Data Anal 2004 10 175 90 10.1023/B:LIDA.0000030202.20842.c9 15293631
3 Lee CH Huang C-Y Xu G Luo X Semiparametric regression analysis for alternating recurrent event data Stat Med 2018 37 996 1008 10.1002/sim.7563 29171035
4 Huang Y Louis TA Nonparametric estimation of the joint distribution of survival time and mark variables Biometrika 1998 85 785 98 10.1093/biomet/85.4.785
5 Wang M-C Chang S-H Nonparametric estimation of a recurrent survival function J Am Stat Assoc 1999 94 146 53 10.1080/01621459.1999.10473831 24244058
6 Parzen MI Wei LJ Ying Z A resampling method based on pivotal estimating functions Biometrika 1994 81 341 50 10.1093/biomet/81.2.341
7 Huang Y. J R Stat Soc Ser B (Stat Methodol). 2002; 64:17–29.
8 Tansella M Community-based psychiatry: long-term patterns of care in south-verona Psychol Med Monogr Suppl 1991 19 1 54 10.1017/S0264180100000217 1745696
9 Castro-Pearson S, Sur A, Lee CH, Huang C-Y, Luo X. BivRec: Bivariate alternating recurrent event data analysis. 2021. https://CRAN.R-project.org/package=BivRec. Accessed 10 June 2021.
10 González JR, Peña EA, Strawderman RL. survrec: Survival analysis for recurrent event Data. 2012. https://CRAN.R-project.org/src/contrib/Archive/survrec/. Accessed 1 May 2021.
11 Wang W, Fu H, Chiou SH, Yan J. reda: Recurrent event data analysis. 2020. https://CRAN.R-project.org/package=reda. Accessed 22 Sep 2021.
12 Chiou SH, Huang C-Y. reReg: Recurrent event regression. 2020. https://CRAN.R-project.org/package=reReg. Accessed 22 Sep 2021.
13 Huang Y Chen YQ Marginal regression of gaps between recurrent events Lifetime Data Anal 2003 9 293 303 10.1023/A:1025892922453 14649847
14 Lu W Marginal regression of multivariate event times based on linear transformation models Lifetime Data Anal 2005 11 389 404 10.1007/s10985-005-2969-4 16133886
15 Sun L Park D-H Sun J The additive hazards model for recurrent gap times Stat Sin 2006 16 919 32
16 Luo X Huang C-Y Wang L Quantile regression for recurrent gap time data Biometrics 2013 69 375 85 10.1111/biom.12010 23489055
17 Xue X Brookmeyer R Bivariate frailty model for the analysis of multivariate survival time Lifetime Data Anal 1996 2 277 89 10.1007/BF00128978 9384637
18 Li X Chen Y Li R A frailty model for recurrent events during alternating restraint and non-restraint time periods Stat Med 2017 36 643 54 10.1002/sim.7150 27757970

